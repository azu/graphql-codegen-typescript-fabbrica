export const helper ={
  "arrayElement": {
    "name": "arrayElement",
    "description": "<p>Returns random element from the given array.</p>\n",
    "parameters": [
      {
        "name": "<T>",
        "type": "any",
        "description": "<p>The type of the elements to pick from.</p>\n"
      },
      {
        "name": "array",
        "type": "T[]",
        "description": "<p>The array to pick the value from.</p>\n"
      }
    ],
    "since": "6.3.0",
    "sourcePath": "src/modules/helpers/index.ts#L846",
    "throws": "If the given array is empty.",
    "returns": "T",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> arrayElement</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt;(</span><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">array</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> ReadonlyArray</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt;)</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">arrayElement</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">([</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'cat'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'dog'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'mouse'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">]) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'dog'</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "arrayElements": {
    "name": "arrayElements",
    "description": "<p>Returns a subset with random elements of the given array in random order.</p>\n",
    "parameters": [
      {
        "name": "<T>",
        "type": "any",
        "description": "<p>The type of the elements to pick from.</p>\n"
      },
      {
        "name": "array",
        "type": "T[]",
        "description": "<p>Array to pick the value from.</p>\n"
      },
      {
        "name": "count?",
        "type": "number | { ... }",
        "description": "<p>Number or range of elements to pick.\nWhen not provided, random number of elements will be picked.\nWhen value exceeds array boundaries, it will be limited to stay inside.</p>\n"
      },
      {
        "name": "count.max",
        "type": "number",
        "description": "<p>The maximum number of elements to pick.</p>\n"
      },
      {
        "name": "count.min",
        "type": "number",
        "description": "<p>The minimum number of elements to pick.</p>\n"
      }
    ],
    "since": "6.3.0",
    "sourcePath": "src/modules/helpers/index.ts#L942",
    "returns": "T[]",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> arrayElements</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt;(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    array</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> ReadonlyArray</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt;,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    count</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">?:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">      |</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">      |</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">          min</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">          max</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">  )</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">[];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">arrayElements</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">([</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'cat'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'dog'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'mouse'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">]) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// ['mouse', 'cat']</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">arrayElements</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">([</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">2</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">3</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">4</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">5</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">], </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">2</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// [4, 2]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">arrayElements</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">([</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">2</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">3</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">4</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">5</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">], { min: </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">2</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, max: </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">4</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// [3, 5, 1]</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "enumValue": {
    "name": "enumValue",
    "description": "<p>Returns a random value from an Enum object.</p>\n<p>This does the same as <code>objectValue</code> except that it ignores (the values assigned to) the numeric keys added for TypeScript enums.</p>\n",
    "parameters": [
      {
        "name": "<T>",
        "type": "Record<string | number, string | number>",
        "description": "<p>Type of generic enums, automatically inferred by TypeScript.</p>\n"
      },
      {
        "name": "enumObject",
        "type": "T",
        "description": "<p>Enum to pick the value from.</p>\n"
      }
    ],
    "since": "8.0.0",
    "sourcePath": "src/modules/helpers/index.ts#L1017",
    "returns": "T[keyof T]",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> enumValue</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">T</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> extends</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> Record</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">string</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> |</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">string</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> |</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt;&gt;(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    enumObject</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">  )</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">[</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">keyof</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">enum</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> Color</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> { </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">Red</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">Green</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">Blue</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">enumValue</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(Color) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 1 (Green)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">enum</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> Direction</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> { </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">North</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\"> 'North'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">South</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\"> 'South'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">enumValue</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(Direction) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'South'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">enum</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> HttpStatus</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> { </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">Ok</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> 200</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">Created</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> 201</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">BadRequest</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> 400</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">Unauthorized</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> 401</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">enumValue</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(HttpStatus) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 200 (Ok)</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "fake": {
    "name": "fake",
    "description": "<p>Generator for combining faker methods based on a static string input or an array of static string inputs.</p>\n<p>Note: We recommend using string template literals instead of <code>fake()</code>,\nwhich are faster and strongly typed (if you are using TypeScript),\ne.g. <code>const address = `${faker.location.zipCode()} ${faker.location.city()}`;</code></p>\n<p>This method is useful if you have to build a random string from a static, non-executable source\n(e.g. string coming from a user, stored in a database or a file).</p>\n<p>It checks the given string for placeholders and replaces them by calling faker methods:</p>\n<div class=\"language-js vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> hello</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fake</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'Hi, my name is {{person.firstName}} {{person.lastName}}!'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">);</span></span></code></pre>\n</div><p>This would use the <code>faker.person.firstName()</code> and <code>faker.person.lastName()</code> method to resolve the placeholders respectively.</p>\n<p>It is also possible to provide parameters. At first, they will be parsed as json,\nand if that isn't possible, it will fall back to string:</p>\n<div class=\"language-js vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> message</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fake</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'You can call me at {{phone.number(+!# !## #### #####!)}}.'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">);</span></span></code></pre>\n</div><p>It is also possible to use multiple parameters (comma separated).</p>\n<div class=\"language-js vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> message</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fake</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'Your pin is {{string.numeric(4, {\"allowLeadingZeros\": true})}}.'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">);</span></span></code></pre>\n</div><p>It is also NOT possible to use any non-faker methods or plain javascript in such patterns.</p>\n",
    "parameters": [
      {
        "name": "pattern",
        "type": "string | string[]",
        "description": "<p>The pattern string that will get interpolated. If an array is passed, a random element will be picked and interpolated.</p>\n"
      }
    ],
    "since": "7.4.0",
    "sourcePath": "src/modules/helpers/index.ts#L1272",
    "returns": "string",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> fake</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">pattern</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> string</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> |</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> ReadonlyArray</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">string</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt;)</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> string</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fake</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'{{person.lastName}}'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'Barrows'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fake</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'{{person.lastName}}, {{person.firstName}} {{person.suffix}}'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'Durgan, Noe MD'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fake</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'This is static test.'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'This is static test.'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fake</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'Good Morning {{person.firstName}}!'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'Good Morning Estelle!'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fake</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'You can visit me at {{location.streetAddress(true)}}.'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'You can visit me at 3393 Ronny Way Apt. 742.'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fake</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'I flipped the coin and got: {{helpers.arrayElement([\"heads\", \"tails\"])}}'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'I flipped the coin and got: tails'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fake</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">([</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'A: {{person.firstName}}'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'B: {{person.lastName}}'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">]) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'A: Barry'</span></span></code></pre>\n</div>",
    "seeAlsos": [
      "faker.helpers.mustache(): For using custom functions to resolve templates."
    ]
  },
  "fromRegExp": {
    "name": "fromRegExp",
    "description": "<p>Generates a string matching the given regex like expressions.</p>\n<p>This function doesn't provide full support of actual <code>RegExp</code>.\nFeatures such as grouping, anchors and character classes are not supported.\nIf you are looking for a library that randomly generates strings based on\n<code>RegExp</code>s, see <a href=\"https://github.com/fent/randexp.js\" target=\"_blank\" rel=\"noreferrer\">randexp.js</a></p>\n<p>Supported patterns:</p>\n<ul>\n<li><code>x{times}</code> =&gt; Repeat the <code>x</code> exactly <code>times</code> times.</li>\n<li><code>x{min,max}</code> =&gt; Repeat the <code>x</code> <code>min</code> to <code>max</code> times.</li>\n<li><code>[x-y]</code> =&gt; Randomly get a character between <code>x</code> and <code>y</code> (inclusive).</li>\n<li><code>[x-y]{times}</code> =&gt; Randomly get a character between <code>x</code> and <code>y</code> (inclusive) and repeat it <code>times</code> times.</li>\n<li><code>[x-y]{min,max}</code> =&gt; Randomly get a character between <code>x</code> and <code>y</code> (inclusive) and repeat it <code>min</code> to <code>max</code> times.</li>\n<li><code>[^...]</code> =&gt; Randomly get an ASCII number or letter character that is not in the given range. (e.g. <code>[^0-9]</code> will get a random non-numeric character).</li>\n<li><code>[-...]</code> =&gt; Include dashes in the range. Must be placed after the negate character <code>^</code> and before any character sets if used (e.g. <code>[^-0-9]</code> will not get any numeric characters or dashes).</li>\n<li><code>/[x-y]/i</code> =&gt; Randomly gets an uppercase or lowercase character between <code>x</code> and <code>y</code> (inclusive).</li>\n<li><code>x?</code> =&gt; Randomly decide to include or not include <code>x</code>.</li>\n<li><code>[x-y]?</code> =&gt; Randomly decide to include or not include characters between <code>x</code> and <code>y</code> (inclusive).</li>\n<li><code>x*</code> =&gt; Repeat <code>x</code> 0 or more times.</li>\n<li><code>[x-y]*</code> =&gt; Repeat characters between <code>x</code> and <code>y</code> (inclusive) 0 or more times.</li>\n<li><code>x+</code> =&gt; Repeat <code>x</code> 1 or more times.</li>\n<li><code>[x-y]+</code> =&gt; Repeat characters between <code>x</code> and <code>y</code> (inclusive) 1 or more times.</li>\n<li><code>.</code> =&gt; returns a wildcard ASCII character that can be any number, character or symbol. Can be combined with quantifiers as well.</li>\n</ul>\n",
    "parameters": [
      {
        "name": "pattern",
        "type": "string | RegExp",
        "description": "<p>The template string/RegExp to generate a matching string for.</p>\n"
      }
    ],
    "since": "8.0.0",
    "sourcePath": "src/modules/helpers/index.ts#L368",
    "throws": "If min value is more than max value in quantifier, e.g. <code>#{10,5}</code>.\nIf an invalid quantifier symbol is passed in.",
    "returns": "string",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">pattern</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> string</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> |</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> RegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">)</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> string</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'#{5}'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// '#####'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'#{2,9}'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// '#######'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'[1-7]'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// '5'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'#{3}test[1-5]'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// '###test3'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'[0-9a-dmno]'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// '5'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'[^a-zA-Z0-8]'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// '9'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'[a-d0-6]{2,8}'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'a0dc45b0'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'[-a-z]{5}'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'a-zab'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">/</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">[A-Z0-9]</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">{4}</span><span style=\"--shiki-light:#032F62;--shiki-dark:#DBEDFF\">-</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">[A-Z0-9]</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">{4}</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">/</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'BS4G-485H'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">/</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">[A-Z]</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">{5}</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">/</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">i</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'pDKfh'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">/</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">.</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">{5}</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">/</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// '14(#B'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">/</span><span style=\"--shiki-light:#032F62;--shiki-dark:#DBEDFF\">Joh</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">?</span><span style=\"--shiki-light:#032F62;--shiki-dark:#DBEDFF\">n</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">/</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'Jon'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">/</span><span style=\"--shiki-light:#032F62;--shiki-dark:#DBEDFF\">ABC</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">*</span><span style=\"--shiki-light:#032F62;--shiki-dark:#DBEDFF\">DE</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">/</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'ABDE'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">fromRegExp</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">/</span><span style=\"--shiki-light:#032F62;--shiki-dark:#DBEDFF\">bee</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">+</span><span style=\"--shiki-light:#032F62;--shiki-dark:#DBEDFF\">p</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">/</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'beeeeeeeep'</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "maybe": {
    "name": "maybe",
    "description": "<p>Returns the result of the callback if the probability check was successful, otherwise <code>undefined</code>.</p>\n",
    "parameters": [
      {
        "name": "<TResult>",
        "type": "any",
        "description": "<p>The type of result of the given callback.</p>\n"
      },
      {
        "name": "callback",
        "type": "() => TResult",
        "description": "<p>The callback to that will be invoked if the probability check was successful.</p>\n"
      },
      {
        "name": "options",
        "type": "{ ... }",
        "default": "{}",
        "description": "<p>The options to use.</p>\n"
      },
      {
        "name": "options.probability?",
        "type": "number",
        "default": "0.5",
        "description": "<p>The probability (<code>[0.00, 1.00]</code>) of the callback being invoked.</p>\n"
      }
    ],
    "since": "6.3.0",
    "sourcePath": "src/modules/helpers/index.ts#L755",
    "returns": "undefined | TResult",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> maybe</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> TResult</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt;(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">    callback</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> () </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">=&gt;</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> TResult</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    options</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">      probability</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">?:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">    } </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> {}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">  )</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> TResult</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> |</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> undefined</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">maybe</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(() </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">=&gt;</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\"> 'Hello World!'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'Hello World!'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">maybe</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(() </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">=&gt;</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\"> 'Hello World!'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, { probability: </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">0.1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// undefined</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">maybe</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(() </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">=&gt;</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\"> 'Hello World!'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, { probability: </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">0.9</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'Hello World!'</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "multiple": {
    "name": "multiple",
    "description": "<p>Generates an array containing values returned by the given method.</p>\n",
    "parameters": [
      {
        "name": "<TResult>",
        "type": "any",
        "description": "<p>The type of elements.</p>\n"
      },
      {
        "name": "method",
        "type": "(v: unknown, index: number) => TResult",
        "description": "<p>The method used to generate the values.\nThe method will be called with <code>(_, index)</code>, to allow using the index in the generated value e.g. as id.</p>\n"
      },
      {
        "name": "options",
        "type": "{ ... }",
        "default": "{}",
        "description": "<p>The optional options object.</p>\n"
      },
      {
        "name": "options.count?",
        "type": "number | { min: number; max: number; }",
        "default": "3",
        "description": "<p>The number or range of elements to generate.</p>\n"
      }
    ],
    "since": "8.0.0",
    "sourcePath": "src/modules/helpers/index.ts#L1079",
    "returns": "TResult[]",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> multiple</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> TResult</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt;(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">    method</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> (</span><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">v</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> unknown</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">index</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">=&gt;</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> TResult</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    options</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">      count</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">?:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">        |</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">        |</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">            min</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">            max</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">          };</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">    } </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">=</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> {}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">  )</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> TResult</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">[];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">multiple</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(() </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">=&gt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> faker.person.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">firstName</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">()) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// [ 'Aniya', 'Norval', 'Dallin' ]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">multiple</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(() </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">=&gt;</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> faker.person.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">firstName</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(), { count: </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">3</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// [ 'Santos', 'Lavinia', 'Lavinia' ]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">multiple</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">((</span><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">_</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">i</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">=&gt;</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\"> `${</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">color</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">human</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">()</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">}-${</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">i</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> +</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> 1</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">}`</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// [ 'orange-1', 'orchid-2', 'sky blue-3' ]</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "mustache": {
    "name": "mustache",
    "description": "<p>Replaces the <code>{{placeholder}}</code> patterns in the given string mustache style.</p>\n",
    "parameters": [
      {
        "name": "str?",
        "type": "string",
        "description": "<p>The template string to parse.</p>\n"
      },
      {
        "name": "data",
        "type": "Record<string, string | ((substring: string, ...args: any[]) => string)>",
        "description": "<p>The data used to populate the placeholders.\nThis is a record where the key is the template placeholder,\nwhereas the value is either a string or a function suitable for <code>String.replace()</code>.</p>\n"
      }
    ],
    "since": "2.0.1",
    "sourcePath": "src/modules/helpers/index.ts#L716",
    "returns": "string",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> mustache</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    str</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> string</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> |</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> undefined</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    data</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> Record</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">string</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">string</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> |</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> Parameters</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">string</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">[</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'replace'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">]&gt;[</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">]&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">  )</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> string</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">mustache</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'I found {{count}} instances of \"{{word}}\".'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">  count</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">: () </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">=&gt;</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\"> `${</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">.</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">number</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">int</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">()</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">}`</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">  word: </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">\"this word\"</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">}) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'I found 57591 instances of \"this word\".'</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "objectEntry": {
    "name": "objectEntry",
    "description": "<p>Returns a random <code>[key, value]</code> pair from the given object.</p>\n",
    "parameters": [
      {
        "name": "<T>",
        "type": "Record<string, unknown>",
        "description": "<p>The type of the object to select from.</p>\n"
      },
      {
        "name": "object",
        "type": "T",
        "description": "<p>The object to be used.</p>\n"
      }
    ],
    "since": "8.0.0",
    "sourcePath": "src/modules/helpers/index.ts#L825",
    "throws": "If the given object is empty.",
    "returns": "[keyof T, T[keyof T]]",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> objectEntry</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> extends</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> Record</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">string</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">unknown</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt;&gt;(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    object</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">  )</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> [</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">keyof</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">[</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">keyof</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">]];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">objectEntry</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">({ prop1: </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'value1'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, prop2: </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'value2'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// ['prop1', 'value1']</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "objectKey": {
    "name": "objectKey",
    "description": "<p>Returns a random key from given object.</p>\n",
    "parameters": [
      {
        "name": "<T>",
        "type": "Record<string, unknown>",
        "description": "<p>The type of the object to select from.</p>\n"
      },
      {
        "name": "object",
        "type": "T",
        "description": "<p>The object to be used.</p>\n"
      }
    ],
    "since": "6.3.0",
    "sourcePath": "src/modules/helpers/index.ts#L787",
    "throws": "If the given object is empty.",
    "returns": "keyof T",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> objectKey</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> extends</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> Record</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">string</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">unknown</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt;&gt;(</span><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">object</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">)</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> keyof</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">objectKey</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">({ myProperty: </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'myValue'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'myProperty'</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "objectValue": {
    "name": "objectValue",
    "description": "<p>Returns a random value from given object.</p>\n",
    "parameters": [
      {
        "name": "<T>",
        "type": "Record<string, unknown>",
        "description": "<p>The type of object to select from.</p>\n"
      },
      {
        "name": "object",
        "type": "T",
        "description": "<p>The object to be used.</p>\n"
      }
    ],
    "since": "6.3.0",
    "sourcePath": "src/modules/helpers/index.ts#L806",
    "throws": "If the given object is empty.",
    "returns": "T[keyof T]",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> objectValue</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> extends</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> Record</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">string</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">unknown</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt;&gt;(</span><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">object</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">)</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">[</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">keyof</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">objectValue</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">({ myProperty: </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'myValue'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'myValue'</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "rangeToNumber": {
    "name": "rangeToNumber",
    "description": "<p>Helper method that converts the given number or range to a number.</p>\n",
    "parameters": [
      {
        "name": "numberOrRange",
        "type": "number | { ... }",
        "description": "<p>The number or range to convert.</p>\n"
      },
      {
        "name": "numberOrRange.max",
        "type": "number",
        "description": "<p>The maximum value for the range.</p>\n"
      },
      {
        "name": "numberOrRange.min",
        "type": "number",
        "description": "<p>The minimum value for the range.</p>\n"
      }
    ],
    "since": "8.0.0",
    "sourcePath": "src/modules/helpers/index.ts#L1041",
    "returns": "number",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> rangeToNumber</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    numberOrRange</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">      |</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">      |</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">          min</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">          max</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">  )</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">rangeToNumber</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">rangeToNumber</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">({ min: </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, max: </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">10</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 5</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "replaceCreditCardSymbols": {
    "name": "replaceCreditCardSymbols",
    "description": "<p>Replaces the symbols and patterns in a credit card schema including Luhn checksum.</p>\n<p>This method supports both range patterns <code>[4-9]</code> as well as the patterns used by <code>replaceSymbolWithNumber()</code>.\n<code>L</code> will be replaced with the appropriate Luhn checksum.</p>\n",
    "parameters": [
      {
        "name": "string",
        "type": "string",
        "default": "'6453-####-####-####-###L'",
        "description": "<p>The credit card format pattern.</p>\n"
      },
      {
        "name": "symbol",
        "type": "string",
        "default": "'#'",
        "description": "<p>The symbol to replace with a digit.</p>\n"
      }
    ],
    "since": "5.0.0",
    "sourcePath": "src/modules/helpers/index.ts#L307",
    "returns": "string",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> replaceCreditCardSymbols</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    string</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> string</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\"> '6453-####-####-####-###L'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    symbol</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> string</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\"> '#'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">  )</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> string</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">replaceCreditCardSymbols</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">() </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// '6453-4876-8626-8995-3771'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">replaceCreditCardSymbols</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'1234-[4-9]-##!!-L'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// '1234-9-5298-2'</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "replaceSymbols": {
    "name": "replaceSymbols",
    "description": "<p>Parses the given string symbol by symbols and replaces the placeholder appropriately.</p>\n<ul>\n<li><code>#</code> will be replaced with a digit (<code>0</code> - <code>9</code>).</li>\n<li><code>?</code> will be replaced with an upper letter ('A' - 'Z')</li>\n<li>and <code>*</code> will be replaced with either a digit or letter.</li>\n</ul>\n",
    "parameters": [
      {
        "name": "string",
        "type": "string",
        "default": "''",
        "description": "<p>The template string to parse.</p>\n"
      }
    ],
    "since": "3.0.0",
    "sourcePath": "src/modules/helpers/index.ts#L244",
    "returns": "string",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> replaceSymbols</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">string</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> string</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\"> ''</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">)</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> string</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">replaceSymbols</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">() </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// ''</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">replaceSymbols</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'#####'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// '98441'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">replaceSymbols</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'?????'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'ZYRQQ'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">replaceSymbols</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'*****'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// '4Z3P7'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">replaceSymbols</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'Your pin is: #?*#?*'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// '0T85L1'</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "shuffle": {
    "name": "shuffle",
    "description": "<p>Returns a randomized version of the array.</p>\n",
    "parameters": [
      {
        "name": "<T>",
        "type": "any",
        "description": "<p>The type of the elements to shuffle.</p>\n"
      },
      {
        "name": "list",
        "type": "T[]",
        "description": "<p>The array to shuffle.</p>\n"
      },
      {
        "name": "options?",
        "type": "{ ... }",
        "default": "{}",
        "description": "<p>The options to use when shuffling.</p>\n"
      },
      {
        "name": "options.inplace?",
        "type": "boolean",
        "default": "false",
        "description": "<p>Whether to shuffle the array in place or return a new array.</p>\n"
      }
    ],
    "since": "2.0.1",
    "sourcePath": "src/modules/helpers/index.ts#L636",
    "returns": "T[]",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> shuffle</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt;(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    list</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">[],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    options</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">?:</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">      inplace</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">?:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> boolean</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">  )</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">[];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">shuffle</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">([</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'a'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'b'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'c'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">]) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// [ 'b', 'c', 'a' ]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">shuffle</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">([</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'a'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'b'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'c'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">], { inplace: </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">true</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// [ 'b', 'c', 'a' ]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">shuffle</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">([</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'a'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'b'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'c'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">], { inplace: </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">false</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// [ 'b', 'c', 'a' ]</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "slugify": {
    "name": "slugify",
    "description": "<p>Slugifies the given string.\nFor that all spaces (<code> </code>) are replaced by hyphens (<code>-</code>)\nand most non word characters except for dots and hyphens will be removed.</p>\n",
    "parameters": [
      {
        "name": "string",
        "type": "string",
        "default": "''",
        "description": "<p>The input to slugify.</p>\n"
      }
    ],
    "since": "2.0.1",
    "sourcePath": "src/modules/helpers/index.ts#L218",
    "returns": "string",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> slugify</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">string</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> string</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\"> ''</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">)</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> string</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">slugify</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">() </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// ''</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">slugify</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">\"Hello world!\"</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'Hello-world'</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "uniqueArray": {
    "name": "uniqueArray",
    "description": "<p>Takes an array of strings or function that returns a string\nand outputs a unique array of strings based on that source.\nThis method does not store the unique state between invocations.</p>\n<p>If there are not enough unique values to satisfy the length, if\nthe source is an array, it will only return as many items as are\nin the array. If the source is a function, it will return after\na maximum number of attempts has been reached.</p>\n",
    "parameters": [
      {
        "name": "<T>",
        "type": "any",
        "description": "<p>The type of the elements.</p>\n"
      },
      {
        "name": "source",
        "type": "T[] | (() => T)",
        "description": "<p>The strings to choose from or a function that generates a string.</p>\n"
      },
      {
        "name": "length",
        "type": "number",
        "description": "<p>The number of elements to generate.</p>\n"
      }
    ],
    "since": "6.0.0",
    "sourcePath": "src/modules/helpers/index.ts#L673",
    "returns": "T[]",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> uniqueArray</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt;(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    source</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> ReadonlyArray</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt; </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">|</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> (() </span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">=&gt;</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">),</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    length</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">  )</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">[];</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">uniqueArray</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(faker.word.sample, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">50</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">uniqueArray</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">(faker.definitions.person.first_name, </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">6</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">uniqueArray</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">([</span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">\"Hello\"</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">\"World\"</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">\"Goodbye\"</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">], </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">2</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">)</span></span></code></pre>\n</div>",
    "seeAlsos": []
  },
  "weightedArrayElement": {
    "name": "weightedArrayElement",
    "description": "<p>Returns a weighted random element from the given array. Each element of the array should be an object with two keys <code>weight</code> and <code>value</code>.</p>\n<ul>\n<li>Each <code>weight</code> key should be a number representing the probability of selecting the value, relative to the sum of the weights. Weights can be any positive float or integer.</li>\n<li>Each <code>value</code> key should be the corresponding value.</li>\n</ul>\n<p>For example, if there are two values A and B, with weights 1 and 2 respectively, then the probability of picking A is 1/3 and the probability of picking B is 2/3.</p>\n",
    "parameters": [
      {
        "name": "<T>",
        "type": "any",
        "description": "<p>The type of the elements to pick from.</p>\n"
      },
      {
        "name": "array",
        "type": "Array<{ ... }>",
        "description": "<p>Array to pick the value from.</p>\n"
      },
      {
        "name": "array[].value",
        "type": "T",
        "description": "<p>The value to pick.</p>\n"
      },
      {
        "name": "array[].weight",
        "type": "number",
        "description": "<p>The weight of the value.</p>\n"
      }
    ],
    "since": "8.0.0",
    "sourcePath": "src/modules/helpers/index.ts#L883",
    "returns": "T",
    "examples": "<div class=\"language-ts vp-adaptive-theme\"><button title=\"Copy Code\" class=\"copy\"></button><span class=\"lang\">ts</span><pre class=\"shiki shiki-themes github-light github-dark vp-code\" v-pre><code><span class=\"line\"><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">function</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> weightedArrayElement</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">const</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&gt;(</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">    array</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> ReadonlyArray</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">&lt;{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">      weight</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\"> number</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E36209;--shiki-dark:#FFAB70\">      value</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">    }&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">  )</span><span style=\"--shiki-light:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\"> T</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">faker.helpers.</span><span style=\"--shiki-light:#6F42C1;--shiki-dark:#B392F0\">weightedArrayElement</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">([{ weight: </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">5</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, value: </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'sunny'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }, { weight: </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">4</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, value: </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'rainy'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }, { weight: </span><span style=\"--shiki-light:#005CC5;--shiki-dark:#79B8FF\">1</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\">, value: </span><span style=\"--shiki-light:#032F62;--shiki-dark:#9ECBFF\">'snowy'</span><span style=\"--shiki-light:#24292E;--shiki-dark:#E1E4E8\"> }]) </span><span style=\"--shiki-light:#6A737D;--shiki-dark:#6A737D\">// 'sunny', 50% of the time, 'rainy' 40% of the time, 'snowy' 10% of the time</span></span></code></pre>\n</div>",
    "seeAlsos": []
  }
}
